{"ast":null,"code":"import _objectSpread from \"/Users/elyhess/react-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/elyhess/react-portfolio/src/components/dropZone.jsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\nconst baseStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  transition: 'border .3s ease-in-out'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nfunction DropzoneComponent(props) {\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(acceptedFiles);\n  }, []);\n\n  const _useDropzone = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  }),\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive,\n        isDragAccept = _useDropzone.isDragAccept,\n        isDragReject = _useDropzone.isDragReject;\n\n  const style = useMemo(() => _objectSpread({}, baseStyle, {}, isDragActive ? activeStyle : {}, {}, isDragAccept ? acceptStyle : {}, {}, isDragReject ? rejectStyle : {}), [isDragActive, isDragReject, isDragAccept]);\n  return React.createElement(\"div\", Object.assign({}, getRootProps({\n    style\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Drag and drop your images here.\"));\n}\n\nexport default DropzoneComponent;","map":{"version":3,"sources":["/Users/elyhess/react-portfolio/src/components/dropZone.jsx"],"names":["React","useCallback","useMemo","useDropzone","baseStyle","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","transition","activeStyle","acceptStyle","rejectStyle","DropzoneComponent","props","onDrop","acceptedFiles","console","log","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,aAAa,EAAE,QAFC;AAGhBC,EAAAA,UAAU,EAAE,QAHI;AAIhBC,EAAAA,OAAO,EAAE,MAJO;AAKhBC,EAAAA,WAAW,EAAE,CALG;AAMhBC,EAAAA,YAAY,EAAE,CANE;AAOhBC,EAAAA,WAAW,EAAE,SAPG;AAQhBC,EAAAA,WAAW,EAAE,QARG;AAShBC,EAAAA,eAAe,EAAE,SATD;AAUhBC,EAAAA,KAAK,EAAE,SAVS;AAWhBC,EAAAA,UAAU,EAAE;AAXI,CAAlB;AAcA,MAAMC,WAAW,GAAG;AAClBL,EAAAA,WAAW,EAAE;AADK,CAApB;AAIA,MAAMM,WAAW,GAAG;AAClBN,EAAAA,WAAW,EAAE;AADK,CAApB;AAIA,MAAMO,WAAW,GAAG;AAClBP,EAAAA,WAAW,EAAE;AADK,CAApB;;AAIA,SAASQ,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAMC,MAAM,GAAGpB,WAAW,CAACqB,aAAa,IAAI;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACD,GAFyB,EAEvB,EAFuB,CAA1B;;AADgC,uBAW5BnB,WAAW,CAAC;AACdkB,IAAAA,MADc;AAEdI,IAAAA,MAAM,EAAE;AAFM,GAAD,CAXiB;AAAA,QAM9BC,YAN8B,gBAM9BA,YAN8B;AAAA,QAO9BC,aAP8B,gBAO9BA,aAP8B;AAAA,QAQ9BC,YAR8B,gBAQ9BA,YAR8B;AAAA,QAS9BC,YAT8B,gBAS9BA,YAT8B;AAAA,QAU9BC,YAV8B,gBAU9BA,YAV8B;;AAgBhC,QAAMC,KAAK,GAAG7B,OAAO,CAAC,wBACjBE,SADiB,MAEhBwB,YAAY,GAAGZ,WAAH,GAAiB,EAFb,MAGhBa,YAAY,GAAGZ,WAAH,GAAiB,EAHb,MAIhBa,YAAY,GAAGZ,WAAH,GAAiB,EAJb,CAAD,EAKjB,CACFU,YADE,EAEFE,YAFE,EAGFD,YAHE,CALiB,CAArB;AAWA,SACE,6CAASH,YAAY,CAAC;AAACK,IAAAA;AAAD,GAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWJ,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,CADF;AAMD;;AAED,eAAeR,iBAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst baseStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  transition: 'border .3s ease-in-out'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nfunction DropzoneComponent(props) {\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(acceptedFiles);\n  }, []);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  return (\n    <div {...getRootProps({style})}>\n      <input {...getInputProps()} />\n      <div>Drag and drop your images here.</div>\n    </div>\n  )\n}\n\nexport default DropzoneComponent;"]},"metadata":{},"sourceType":"module"}